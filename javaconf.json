{
	delta:{
		q0:{
			alpha:id,
			num:int,
			" ":blk_final,
			";":eos_final,
			",":coma_final,
			"\"":string_aux,
			"\n":eol_final,
			"\t":tab_final,
			"\r":carr_final,
			"+":suma,
			"-":resta_final,
			"*":mul_final,
			"/":div,
			"<":less_final,
			">":big_final,
			"=":assign,
			"(":braop_final,
			")":bracl_final,
			"{":keyop_final,
			"}":keycl_final,
			"[":claop_final,
			"]":clacl_final,
			"|":or,
			"&":and,
			"·":eof_final,
			"'":char
		},
		id:{
			alpha:id,
			num:id,
			terminators:id_final,
			op:id_final,
			association:id_final
		},
		int:{
			num:int,
			".":real_temp,
			alpha:int_final,
			terminators:int_final,
			op:int_final,
			association:int_final
		},
		real_temp:{
			num:real
		},
		real:{
			num:real,
			alpha:real_final,
			terminators:real_final,
			op:real_final,
			association:real_final
		},
		string_aux:{
			num:string,
			alpha:string,
			terminators_sin_eol:string,
			"\n":string_inc_final,
			"\"":string_final,
			op:string,
			association:string,
			special:string
		},
		string:{
			num:string,
			alpha:string,
			terminators_sin_eol:string,
			"\n":string_inc_final,
			"\"":string_final,
			op:string,
			association:string,
			special:string
		},
		suma:{
			alpha:suma_final,
			num:suma_final,
			terminators:suma_final,
			association:suma_final,
			special:suma_final,
			opsinaddequal:suma_final,
			"+":sumasuma_final,
			"=":sumaigual_final
		},
		div:{
			alpha:div_final,
			num:div_final,
			terminators:div_final,
			opsinmul:div_final,
			association:div_final,
			"*":comment
		},
		comment:{
		  alpha:comment,
		  num:comment,
		  special:comment,
		  terminators_sin_eof:comment,
		  "·":eof_final,
		  association:comment,
		  opsinmul:comment,
		  "*":comment_aux
		},
		comment_aux:{
		  "/":comment_final,
		  alpha:comment,
		  num:comment,
		  special:comment,
		  terminators_sin_eof:comment,
		  "·":eof_final,
		  association:comment,
		  opsindiv:comment
		},
		assign:{
			alpha:assign_final,
			num:assign_final,
			terminators:assign_final,
			association:assign_final,
			"=":equal_final,
			opsinequal:assign_final
		},
		or:{
			"|":or_final
		},
		and:{
			"&":and_final
		},
		char:{
		    alpha:char_aux,
		    num:char_aux,
		    terminators:char_aux,
		    op:char_aux,
		    association:char_aux,
		    specialsinapos:char_aux
		},
		char_aux:{
		    "'":char_final
		}
	},
	
	alias:{
		num:["0","1","2","3","4","5","6","7","8","9"],
		alpha:[a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z],
		op:["+","-","*","/","=","<",">","|","&"],
		opsinaddequal:["-","*","/","<",">","|","&"],
		opsinequal:["+","-","*","/","<",">","|","&"],
		opsinmul:["+","-","/","=","<",">","|","&"],
		opsindiv:["+","-","*","=","<",">","|","&"],
		association:["(",")","[","]","{","}"],
		special:["!","?","$","^","'","#","%",":",".","_","-","@","¬","°","¨","~"],
		specialsinapos:["!","?","$","^","'","#","%",":",".","_","-"],
		terminators:["\n","\t"," ",";","·","\r",","],
		terminators_sin_eof:["\n","\t"," ",";","\r",","],
		terminators_sin_eol:["\t"," ",";","·","\r",","]
	},
	
	key_words:[new,return,char,int,float,double,class,public,void,private,String,if,else,while],
	
	stateActions:{
		id:{
			push:true
		},
		int:{
			push:true
		},
		real:{
			push:true
		},
		real_temp:{
			push:true
		},
		string:{
			push:true
		},
		char_aux:{
		  	push:true  
		},
		int_final:{
			token_id:INT,
			return_value:true,
			reset:true,
			go_back:true
		},
		real_final:{
			token_id:REAL,
			return_value:true,
			reset:true,
			go_back:true
		},
		id_final:{
			token_id:ID,
			return_value:true,
			reset:true,
			go_back:true,
			check_keyword:true,
			check_length:true,
			max_length:16
		},
		string_final:{
			token_id:STRING,
			return_value:true,
			reset:true
		},
		string_inc_final:{
			token_id:STR_INC,
			return_value:true,
			reset:true,
			go_back:true
		},
		blk_final:{
			ignore:true
		},
		coma_final:{
			token_id:COMA
		},
		eos_final:{
			token_id:EOS
		},
		eol_final:{
			ignore:true
		},
		tab_final:{
			ignore:true
		},
		carr_final:{
			ignore:true
		},
		suma_final:{
			token_id:SUMA,
			go_back:true
		},
		sumasuma_final:{
			token_id:AUTOINC
		},
		sumaigual_final:{
			token_id:SUMASSIGN
		},
		resta_final:{
			token_id:RESTA
		},
		mul_final:{
			token_id:MUL
		},
		div_final:{
			token_id:DIV,
			go_back:true
		},
		less_final:{
			token_id:LESSER
		},
		big_final:{
			token_id:BIGGER
		},
		assign_final:{
			token_id:ASSIGN,
			go_back:true
		},
		equal_final:{
			token_id:EQUAL
		},
		braop_final:{
			token_id:BRACKETOPEN
		},
		bracl_final:{
			token_id:BRACKETCLOSE
		},
		claop_final:{
			token_id:CLAPSOPEN
		},
		clacl_final:{
			token_id:CLAPSCLOSE
		},
		keyop_final:{
			token_id:KEYOPEN
		},
		keycl_final:{
			token_id:KEYCLOSE
		},
		or_final:{
			token_id:OR
		},
		and_final:{
			token_id:AND
		},
		comment_final:{
		    ignore:true
		},
		char_final:{
		    token_id:CHAR,
		    return_value:true,
		    reset:true
		},
		eof_final:{
		    null_token:true
		}
		
	},
	
	token_codes:{
		INT:1,
		REAL:2,
		ID:3,
		STRING:4,
		STR_INC:5,
		EOS:6,
		SUMA:7,
		AUTOINC:8,
		SUMASSIGN:9,
		RESTA:10,
		MUL:11,
		DIV:12,
		LESSER:13,
		BIGGER:14,
		ASSIGN:15,
		EQUAL:16,
		BRACKETOPEN:17,
		BRACKETCLOSE:18,
		CLAPSOPEN:19,
		CLAPSCLOSE:20,
		KEYOPEN:21,
		KEYCLOSE:22,
		OR:23,
		AND:24,
		CHAR:25,
		COMA:26,
		new:50,
		return:51,
		char:52,
		int:53,
		float:54,
		double:55,
		class:56,
		public:57,
		void:58,
		if:59,
		else:60,
		while:61,
		private:62,
		String:63
	}
}